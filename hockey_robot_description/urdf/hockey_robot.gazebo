<?xml version="1.0"?>
<robot>

  <!-- ros_control plugin -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/hockey_robot</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>

  <!-- Link1 -->
  <gazebo reference="base_link">
     <collision>
        <surface>
          <bounce>
            <restitution_coefficient>1</restitution_coefficient>
            <threshold>1</threshold>
          </bounce>
          <contact>
            <ode>
              <kp>5000.0</kp>
              <kd>0.001</kd>
              <max_vel>10</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
          <friction>
            <ode>
              <mu>1</mu> 
              <mu2>1</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
  </gazebo>

  <!-- Link2 -->
  <gazebo reference="horizon_track_1">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Orange</material>
  </gazebo>

  <!-- Link3 -->
  <gazebo reference="pusher_1">
    <mu1>0.04</mu1>
    <mu2>0.04</mu2>
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="horizon_track_2">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Orange</material>
  </gazebo>

  <gazebo reference="pusher_2">
    <mu1>0.04</mu1>
    <mu2>0.04</mu2>
    <material>Gazebo/Black</material>
  </gazebo>

  <!-- camera_link -->
  <gazebo reference="camera_link">
      <collision>
        <surface>
          <bounce>
            <restitution_coefficient>1</restitution_coefficient>
            <threshold>1</threshold>
          </bounce>
          <contact>
            <ode>
              <kp>5000.0</kp>
              <kd>0.001</kd>
              <max_vel>10</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
          <friction>
            <ode>
              <mu>1</mu> 
              <mu2>1</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="sonar_1">
      <collision>
        <surface>
          <bounce>
            <restitution_coefficient>1</restitution_coefficient>
            <threshold>1</threshold>
          </bounce>
          <contact>
            <ode>
              <kp>5000.0</kp>
              <kd>0.001</kd>
              <max_vel>10</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
          <friction>
            <ode>
              <mu>1</mu> 
              <mu2>1</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="sonar_2">
      <collision>
        <surface>
          <bounce>
            <restitution_coefficient>1</restitution_coefficient>
            <threshold>1</threshold>
          </bounce>
          <contact>
            <ode>
              <kp>5000.0</kp>
              <kd>0.01</kd>
              <max_vel>10</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
          <friction>
            <ode>
              <mu>1</mu> 
              <mu2>1</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
  </gazebo>

  <!-- camera -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1024</width>
          <height>1024</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>hockey_robot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link_optical</frameName>
        <!-- setting hackBaseline to anything but 0.0 will cause a misalignment
            between the gazebo sensor image and the frame it is supposed to
            be attached to -->
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Sonar-->
  <gazebo reference='sonar_1'>
    <sensor type="ray" name="sonar">
      <pose>0 0 0 0 0 0</pose>
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.01</min_angle>
            <max_angle>0.01</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.01</min_angle>
            <max_angle>0.01</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.3</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>5</updateRate>
        <topicName>/hockey_robot/laser/sonar_1</topicName>
        <frameName>sonar_1</frameName>
        <fov>0.5</fov>
        <radiation>ultrasound</radiation>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference='sonar_2'>
    <sensor type="ray" name="sonar">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.01</min_angle>
            <max_angle>0.01</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.01</min_angle>
            <max_angle>0.01</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.3</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>5</updateRate>
        <topicName>/hockey_robot/laser/sonar_2</topicName>
        <frameName>sonar_2</frameName>
        <fov>0.5</fov>
        <radiation>ultrasound</radiation>
      </plugin>
    </sensor>
  </gazebo>
</robot>
